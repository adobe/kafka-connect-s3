export VAULT_ADDR=https://vault.corp.adobe.com VAULT_NAMESPACE=dx_unified_edge
vault login -method=ldap username=$USER

creds_mirror=$(vault kv get -field=artifactory-uw2-docker-pipeline-upstream-mirror dx_unified_edge/generic)
USER_mirror=$(echo ${creds_mirror} | cut -f 1 -d ":")
APIKEY_mirror=$(echo ${creds_mirror} | cut -f 2 -d ":")

creds_release=$(vault kv get -field=artifactory-uw2-docker-pipeline-release dx_unified_edge/generic)
USER_release=$(echo ${creds_release} | cut -f 1 -d ":")
APIKEY_release=$(echo ${creds_release} | cut -f 2 -d ":")

ENV=int

for NS in ns-team-aep-pipeline-dr-${ENV} ; do
    
    kubectl -n $NS create secret docker-registry docker-pipeline-upstream-mirror \
        --docker-server=docker-pipeline-upstream-mirror.dr-uw2.adobeitc.com \
        --docker-username=${USER_mirror} \
        --docker-password=${APIKEY_mirror} \
        --docker-email=fabsvc@adobe.com

    kubectl -n $NS create secret docker-registry itc-docker-secret \
        --docker-server=docker-pipeline-release.dr-uw2.adobeitc.com \
        --docker-username=${USER_release} \
        --docker-password=${APIKEY_release} \
        --docker-email=fabsvc@adobe.com
        
    kubectl -n $NS create secret docker-registry docker-monitoring-release \
        --docker-server=docker-monitoring-release.dr-uw2.adobeitc.com \
        --docker-username=${USER_mirror} \
        --docker-password=${APIKEY_mirror} \
        --docker-email=fabsvc@adobe.com
done





helm template kafka-dr-1 kafka-s3-backup --namespace ns-team-aep-pipeline-dr-dev \
    -f ~/work/pipeline-config/.publish/dev/or2/fab-1/kafka-dr/kafka-1.yaml \
    -f /tmp/aws.yaml | kubectl apply -f -

helm template kafka-dr-1 kafka-s3-backup --namespace ns-team-aep-pipeline-dr-int \
    -f ~/work/pipeline-config/.publish/int/or2/fab-1/kafka-dr/kafka-1.yaml \
    -f /tmp/aws.yaml | kubectl apply -f -


/opt/kafka/bin/kafka-topics.sh --bootstrap-server pipeline-kafka-headless:29092 --create --topic s3_topic --partitions 5 --replication-factor 3

curl -H "Content-Type: application/json" http://localhost:8083/connectors

$ curl -X POST -H "Content-Type: application/json" --data @file.config http://localhost:8083/connectors
cat > file.config <<EOF
{
    "name": "service-topic-sink-connector",
    "config": {
        "connector.class":"com.spredfast.kafka.connect.s3.sink.S3SinkConnector",
        "tasks.max":1,
        "topics":"service",
        "flush.size":10,
        "s3.bucket":"pip-fab-test-dr-dev",
        "local.buffer.dir":"/tmp/connect-system-test"
    }
}
EOF

cat > file.config <<EOF
{
    "name": "totalusagereport_dev-topic-sink-connector",
    "config": {
        "connector.class":"com.spredfast.kafka.connect.s3.sink.S3SinkConnector",
        "tasks.max":10,
        "topics":"totalusagereport_dev",
        "flush.size":100000,
        "s3.bucket":"pip-fab-test-dr-dev",
        "local.buffer.dir":"/tmp/connect-system-test"
    }
}
EOF

$ curl -X PUT -H "Content-Type: application/json" --data @file.config \
    http://localhost:8083/connectors/totalusagereport_dev-topic-sink-connector/config
cat > file.config <<EOF
{
    "connector.class":"com.spredfast.kafka.connect.s3.sink.S3SinkConnector",
    "tasks.max":10,
    "topics":"totalusagereport_dev",
    "flush.size":10000000,
    "s3.bucket":"pip-fab-test-dr-dev",
    "local.buffer.dir":"/tmp/connect-system-test"
}
EOF
/opt/kafka/bin/kafka-console-producer.sh --broker-list pipeline-kafka-headless:29092 --topic s3_topic
